1.边距合并：外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。
2.定位：absolute绝对定位使元素的位置与文档流无关，因此不占据空间。这一点与相对定位不同，相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。
        相对定位是“相对于”元素在文档中的初始位置，而绝对定位是“相对于”最近的已定位祖先元素，如果不存在已定位的祖先元素，那么“相对于”最初的包含块。
        fixed：生成绝对定位的元素，相对于浏览器窗口进行定位。 
3.清除浮动
  浮动元素引起的问题：
    1、父元素的高度无法被撑开，影响与父元素同级的元素。
    2、与浮动元素同级的非浮动元素会跟随其后。
    3、若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构。
  使用css中的clear:both;属性来清除元素的浮动可解决2、3问题。（claer:none|left|right|both）注意：清除浮动时，添加clear属性只能对自己有效。
  对于问题1，给父元素添加clearfix样式。
    .clearfix:before,.clearfix:after{                   或者                 .clearfix{
         content:"";                                                             overflow:hidden;
         display:table;                                                          _zoom:1;/*for ie 6*/
      }
     .clearfix:after{
         clear:both;
      }
     .clearfix{
         *zoom:1;/*for ie 6,7*/
      }
 4.CSShack:
   IE条件注释：
   1、只在IE下生效
    <!--[if IE]>
    <link rel="stylesheet" type="text/css" href="ie.css">
    <![endif]-->
   2、只在IE6下生效
    <!--[if IE 6]>
    <link rel="stylesheet" type="text/css" href="ie6.css">
    <![endif]-->
   3、只在IE6以上版本生效
    <!--[if gte IE 6]>
     这段文字只在IE6以上(包括)版本IE浏览器显示
    <![endif]-->
   4、qq
      非IE浏览器生效
    <!--[if !IE]>
      这段文字只在非IE浏览器显示
    <![endif]-->
 5.CSS属性Hack
   属性以下划线开头，只有ie6生效_margin-left:10px;/*ie6 only*/
   属性以星号开头，只有ie6 ie7生效*color:red;
   以\9结尾，所有的ie生效color:black\9;
   以\0结尾，ie8，9,10color:white\0;
 6.js判断ie版本
   // 是否小于等于ie8
   var isIE = '\v'=='v'; 

   // 判断ie版本
   var ieVersion = (function() { if (new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})").exec(navigator.userAgent) != null)
  { return parseFloat( RegExp.$1 ); }
   else { return false; } })
 7.三角形：
 .caret-down {
      display: inline-block;
      width: 0;
      height: 0;
      margin-left: 2px;
      vertical-align: middle;
      border-top: 4px solid;
      border-right: 4px solid transparent;
      border-left: 4px solid transparent;
    }
 8.正则表达式：
  定义和使用：var patt1=new RegExp("hello");
              var patt2=/world/;
  test方法：检索字符串中的指定值。返回值是true或false。
            var pat=/my/;
            var str="this is my code...";
            console.log(pat.test(str));//true
  exec方法：检索字符串中的指定值。返回值是被找到的值。如果没有发现匹配，则返回null。
 9.常见正则：汉字：[\u4e00-\u9fa5]
             手机号：1[0-9]{10}
             邮箱：(\S)+[@]{1}(\S)+[.]{1}(\w)+
 10.基本类型：（数值、布尔值、null和undefined）指的是保存在栈内存中的简单数据段。
    引用数据类型：（对象、数组、函数、正则）指的是那些保存在堆内存中的对象，变量中保存的实际上只是一个指针，这个指针执
                 行内存中的另一个位置，由该位置保存对象。
