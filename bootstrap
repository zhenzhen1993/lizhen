1.Bootsrap使用了一些html5元素和css属性.为了让这些正常工作,需要使用html5文档类型.
2.为了让bootsrap开发的网站对移动设备友好,确保适当的绘制和触屏缩放,需要在网页的head之中添加viewport meta标签,如下所示
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  width属性控制设备的宽度.假设您的网站将被带有不同屏幕分辨率的设备浏览,那么将它设置为device-width将确保它能正确呈现在不同设备上.
  initial-scale=1.0确保网页加载时,以1:1的比例呈现,不会有任何的缩放.
  在移动设备浏览器上,通过viewport meta标签添加user-scale=no可以禁用其缩放功能.通常情况下,maximum-scale=1.0与user-scalable=no一起使用,
  这样禁用缩放功能后,用户只能滚动屏幕,就能让您的网站看上去更像原生应用的感觉.注意,这种方式我们并不推荐所有网站使用,是实际情况而定.
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
3.响应式图像:<img src="" class="img-responsive" alt="Responsive image">
  通过添加img-responsive,class可以让Bootstrap 3中的图像对响应式布局的支持更友好.实质是为图像赋予了 max-width: 100%; 和 height: auto; 属性，
  可以让图像按比例缩放，不超过其父元素的尺寸。
  .img-responsive {
  display: inline-block;
  height: auto;
  max-width: 100%;
}
  这表明相关的图像呈现为 inline-block。当您把元素的 display 属性设置为 inline-block，元素相对于它周围的内容以内联形式呈现，但与内联不同的是，
    这种情况下我们可以设置宽度和高度。
  设置 height:auto，相关元素的高度取决于浏览器。
  设置 max-width 为 100% 会重写任何通过 width 属性指定的宽度。这让图片对响应式布局的支持更友好.
4.全局显示、排版和链接
  基本的全局显示 Bootstrap 3 使用 body {margin: 0;} 来移除 body 的边距。
  请看下面有关 body 的设置：

  body {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 14px;
    line-height: 1.428571429;
    color: #333333;
    background-color: #ffffff;
  }
5.排版 : 使用 @font-family-base、 @font-size-base 和 @line-height-base 属性作为排版样式。
6.链接样式:通过属性 @link-color 设置全局链接的颜色。
对于链接的默认样式，如下设置：
  a:hover,
  a:focus {
    color: #2a6496;
    text-decoration: underline;
  }

  a:focus {
    outline: thin dotted #333;
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
  }
当鼠标悬停在链接上，或者点击过的链接，颜色会被设置为 #2a6496。同时，会呈现一条下划线。
点击过的链接，会呈现一个颜色码为 #333 的细的虚线轮廓。另一条规则是设置轮廓为 5 像素宽，
且对于基于 webkit 浏览器有一个 -webkit-focus-ring-color 的浏览器扩展。轮廓偏移设置为 -2 像素。
7.避免跨浏览器的不一致
  Bootstrap 使用 Normalize 来建立跨浏览器的一致性。
  Normalize.css 是一个很小的 CSS 文件，在 HTML 元素的默认样式中提供了更好的跨浏览器一致性。
8.容器（Container）
  Bootstrap 3 的 container class 用于包裹页面上的内容。
  .container {
     padding-right: 15px;
     padding-left: 15px;
     margin-right: auto;
     margin-left: auto;
    }
  通过上面的代码，把 container 的左右外边距（margin-right、margin-left）交由浏览器决定。请注意，
  由于内边距（padding）和固定宽度，默认情况下容器是不可嵌套的。
  .container:before,
  .container:after {
    display: table;
    content: " ";
   }
   这会产生伪元素。设置 display 为 table，会创建一个匿名的 table-cell 和一个新的块格式化上下文。
   :before 伪元素防止上边距崩塌，:after 伪元素清除浮动。
   如果 conteneditable 属性出现在 HTML 中，由于一些 Opera bug，围绕上述元素创建一个空格。这可以通过使用 content: " " 来修复。
    container:after {
    clear: both;
    }
  它创建了一个伪元素，并确保了所有的容器包含所有的浮动元素。
  Bootstrap 3 CSS 有一个申请响应的媒体查询，在不同的媒体查询阈值范围内都为 container 设置了max-width，用以匹配网格系统。
  @media (min-width: 768px) {
   .container {
      width: 750px;
}











